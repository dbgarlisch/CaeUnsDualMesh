########################################################################
# Pointwise - Proprietary software product of Pointwise, Inc.
#             Copyright (c) 1995-2014 Pointwise, Inc.
#             All rights reserved.
#
# module.mk for src\plugins\CaeUnsDualMesh plugin
########################################################################

########################################################################
########################################################################
#
#                   DO NOT EDIT THIS FILE
#
# To simplify SDK upgrades, the standard module.mk file should NOT be edited.
#
# If you want to modify a plugin's build process, you should rename
# modulelocal-sample.mk to modulelocal.mk and edit its settings.
#
# See the comments in modulelocal-sample.mk for more information.
#
#                   DO NOT EDIT THIS FILE
#
########################################################################
########################################################################

CaeUnsDualMesh_LOC := $(PLUGINS_LOC)/CaeUnsDualMesh
CaeUnsDualMesh_LIB := CaeUnsDualMesh$(DBG_SUFFIX)
CaeUnsDualMesh_CXX_LOC := $(CaeUnsDualMesh_LOC)
CaeUnsDualMesh_OBJ_LOC := $(PLUGINS_OBJ_LOC)/CaeUnsDualMesh

CaeUnsDualMesh_FULLNAME := lib$(CaeUnsDualMesh_LIB).$(SHLIB_SUFFIX)
CaeUnsDualMesh_FULLLIB := $(PLUGINS_DIST_DIR)/$(CaeUnsDualMesh_FULLNAME)

CaeUnsDualMesh_DEPS = \
    $(NULL)

MODCXXFILES := \
    runtimeWrite.cxx CaeUnsDualMesh.cxx \
    $(NULL)

# IMPORTANT:
# Must recompile the shared/XXX/.cxx files for each plugin. These .cxx files
# include the plugin specific settings defined in the ./CaeUnsDualMesh/*.h
# files.
CaeUnsDualMesh_SRC := \
    $(PLUGINS_RT_PWPSRC) \
    $(PLUGINS_RT_PWGMSRC) \
    $(PLUGINS_RT_CAEPSRC) \
    $(patsubst %,$(CaeUnsDualMesh_CXX_LOC)/%,$(MODCXXFILES))

CaeUnsDualMesh_SRC_CXX := $(filter %.cxx,$(MODCXXFILES))

# place the .o files generated from shared sources in the plugin's
# OBJ folder.
CaeUnsDualMesh_OBJ := \
    $(patsubst %.cxx,$(CaeUnsDualMesh_OBJ_LOC)/%.o,$(PLUGINS_RT_PWPFILES)) \
    $(patsubst %.cxx,$(CaeUnsDualMesh_OBJ_LOC)/%.o,$(PLUGINS_RT_PWGMFILES)) \
    $(patsubst %.cxx,$(CaeUnsDualMesh_OBJ_LOC)/%.o,$(PLUGINS_RT_CAEPFILES)) \
    $(patsubst %.cxx,$(CaeUnsDualMesh_OBJ_LOC)/%.o,$(CaeUnsDualMesh_SRC_CXX)) \
    $(NULL)

# To allow over-rides, search FIRST for headers in the local module's folder.
# For example, a site.h file in the local module's folder will preempt the
# file .../src/plugins/site.h
CaeUnsDualMesh_INCL = \
    -I$(CaeUnsDualMesh_LOC) \
    $(PLUGINS_RT_INCL) \
    $(NULL)

CaeUnsDualMesh_LIBS = \
    $(NULL)

CaeUnsDualMesh_MAINT_TARGETS := \
    CaeUnsDualMesh_info \
    CaeUnsDualMesh_install \
    CaeUnsDualMesh_installnow \
    CaeUnsDualMesh_uninstall


########################################################################
# Get (OPTIONAL) locally defined make targets. If a plugin developer wants
# to extend a plugin's make scheme, they should create a modulelocal.mk file
# in the plugin's base folder. To provide for future SDK upgrades, the standard
# module.mk file should NOT be directly edited.
#
ifneq ($(wildcard $(CaeUnsDualMesh_LOC)/modulelocal.mk),)
    CaeUnsDualMesh_DEPS += $(CaeUnsDualMesh_LOC)/modulelocal.mk

    include $(CaeUnsDualMesh_LOC)/modulelocal.mk

    # merge in plugin private settings
    CaeUnsDualMesh_OBJ += \
        $(patsubst %.cxx,$(CaeUnsDualMesh_OBJ_LOC)/%.o,$(filter %.cxx,$(CaeUnsDualMesh_CXXFILES_PRIVATE))) \
        $(NULL)

    CaeUnsDualMesh_SRC += \
        $(patsubst %,$(CaeUnsDualMesh_CXX_LOC)/%,$(CaeUnsDualMesh_CXXFILES_PRIVATE)) \
        $(NULL)

    CaeUnsDualMesh_INCL += $(CaeUnsDualMesh_INCL_PRIVATE)
    CaeUnsDualMesh_LIBS += $(CaeUnsDualMesh_LIBS_PRIVATE)
    CaeUnsDualMesh_CXXFLAGS += $(CaeUnsDualMesh_CXXFLAGS_PRIVATE)
    CaeUnsDualMesh_LDFLAGS += $(CaeUnsDualMesh_LDFLAGS_PRIVATE)
    CaeUnsDualMesh_MAINT_TARGETS += $(CaeUnsDualMesh_MAINT_TARGETS_PRIVATE)
    CaeUnsDualMesh_DEPS += $(CaeUnsDualMesh_DEPS_PRIVATE)
endif

PLUGIN_MAINT_TARGETS += $(CaeUnsDualMesh_MAINT_TARGETS)
PLUGIN_OBJ += $(CaeUnsDualMesh_OBJ)

# add to plugin maint targets to the global .PHONY target
.PHONY: \
    $(CaeUnsDualMesh_MAINT_TARGETS) \
    $(NULL)


########################################################################
# Set the final build macros
CaeUnsDualMesh_CXXFLAGS += $(CXXFLAGS) $(PLUGINS_STDDEFS) $(CaeUnsDualMesh_INCL) \
    -DPWGM_HIDE_STRUCTURED_API


ifeq ($(machine),macosx)
CaeUnsDualMesh_LDFLAGS += -install_name "@rpath/Plugins/$(CaeUnsDualMesh_FULLNAME)"
else
CaeUnsDualMesh_LDFLAGS +=
endif


########################################################################
# list of plugin's build targets
#
CaeUnsDualMesh: $(CaeUnsDualMesh_FULLLIB)

$(CaeUnsDualMesh_FULLLIB): $(CaeUnsDualMesh_OBJ) $(CaeUnsDualMesh_DEPS)
	@echo "***"
	@echo "*** $@"
	@echo "***"
	@mkdir -p $(dir $@)
	$(SHLIB_LD) $(ARCH_FLAGS) $(CaeUnsDualMesh_LDFLAGS) -o $(CaeUnsDualMesh_FULLLIB) $(CaeUnsDualMesh_OBJ) $(CaeUnsDualMesh_LIBS) $(SYS_LIBS)

CaeUnsDualMesh_info:
	@echo ""
	@echo "--------------------------------------------------------------"
ifeq ($(machine),macosx)
	otool -L -arch all $(CaeUnsDualMesh_FULLLIB)
	@echo ""
endif
	file $(CaeUnsDualMesh_FULLLIB)
	@echo "--------------------------------------------------------------"
	@echo ""


########################################################################
# list of plugin's intermediate targets
#
$(CaeUnsDualMesh_OBJ_LOC):
	mkdir -p $(CaeUnsDualMesh_OBJ_LOC)

#.......................................................................
# build .d files for the plugin and each of the shared runtime sources
# the .d files will be placed in the plugins OBJ folder CaeUnsDualMesh_OBJ_LOC
$(CaeUnsDualMesh_OBJ_LOC)/%.d: $(CaeUnsDualMesh_CXX_LOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsDualMesh_OBJ_LOC)/$*.d"
	@mkdir -p $(dir $@)
	@./depend.sh $(CaeUnsDualMesh_OBJ_LOC) $(CaeUnsDualMesh_CXXFLAGS) $< > $@

$(CaeUnsDualMesh_OBJ_LOC)/%.d: $(PLUGINS_RT_PWPLOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsDualMesh_OBJ_LOC)/$*.d"
	@mkdir -p $(dir $@)
	@./depend.sh $(CaeUnsDualMesh_OBJ_LOC) $(CaeUnsDualMesh_CXXFLAGS) $< > $@

$(CaeUnsDualMesh_OBJ_LOC)/%.d: $(PLUGINS_RT_PWGMLOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsDualMesh_OBJ_LOC)/$*.d"
	@mkdir -p $(dir $@)
	@./depend.sh $(CaeUnsDualMesh_OBJ_LOC) $(CaeUnsDualMesh_CXXFLAGS) $< > $@

$(CaeUnsDualMesh_OBJ_LOC)/%.d: $(PLUGINS_RT_CAEPLOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsDualMesh_OBJ_LOC)/$*.d"
	@mkdir -p $(dir $@)
	@./depend.sh $(CaeUnsDualMesh_OBJ_LOC) $(CaeUnsDualMesh_CXXFLAGS) $< > $@

#.......................................................................
# build .o files for the plugin and each of the shared runtime sources.
# the .o files will be placed in the plugins OBJ folder CaeUnsDualMesh_OBJ_LOC
$(CaeUnsDualMesh_OBJ_LOC)/%.o: $(CaeUnsDualMesh_CXX_LOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(dir $@)
	$(CXX) $(CaeUnsDualMesh_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeUnsDualMesh_OBJ_LOC)/%.o: $(PLUGINS_RT_PWPLOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(dir $@)
	$(CXX) $(CaeUnsDualMesh_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeUnsDualMesh_OBJ_LOC)/%.o: $(PLUGINS_RT_PWGMLOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(dir $@)
	$(CXX) $(CaeUnsDualMesh_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeUnsDualMesh_OBJ_LOC)/%.o: $(PLUGINS_RT_CAEPLOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(dir $@)
	$(CXX) $(CaeUnsDualMesh_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<


########################################################################
# list of plugin's clean targets
#
CaeUnsDualMesh_cleandep:
	-$(RMR) $(CaeUnsDualMesh_OBJ_LOC)/*.d

CaeUnsDualMesh_clean:
	-$(RMR) $(CaeUnsDualMesh_OBJ_LOC)/*.{d,o}

CaeUnsDualMesh_distclean: CaeUnsDualMesh_clean
	-$(RMF) $(CaeUnsDualMesh_FULLLIB) > /dev/null 2>&1

CaeUnsDualMesh_clobber:
	-$(RMR) $(CaeUnsDualMesh_OBJ_LOC)


########################################################################
# list of plugin's clean targets
#
CaeUnsDualMesh_install: install_validate CaeUnsDualMesh_installnow
	@echo "CaeUnsDualMesh Installed to '$(PLUGIN_INSTALL_FULLPATH)'"

CaeUnsDualMesh_installnow:
	-@$(CP) $(CaeUnsDualMesh_FULLLIB) "$(PLUGIN_INSTALL_FULLPATH)/libCaeUnsDualMesh.$(SHLIB_SUFFIX)"

CaeUnsDualMesh_uninstall:
	@echo "CaeUnsDualMesh Uninstalled from '$(PLUGIN_INSTALL_FULLPATH)'"
	-@$(RMF) "$(PLUGIN_INSTALL_FULLPATH)/libCaeUnsDualMesh.$(SHLIB_SUFFIX)"
